<VirtualHost *:80>
    # 기본적으로 .php는 PHP-FPM으로 실행
    <FilesMatch "\.php$">
        SetHandler "proxy:fcgi://php:9000"
    </FilesMatch>

    ServerName localhost
    DocumentRoot "/var/www/html"

    AllowEncodedSlashes On
    RewriteEngine On

    # Filename Confusion - Path Truncation
    RewriteRule "^/user/(.*)$" "/var/user/$1/profile.yml" [L]

    # Source Disclosure
    # /html/config 접속하면 config.php 원문 노출되는 거임
    RewriteRule "^/html/(.*)$" "/$1.php" [L]

    <LocationMatch "\.php$">
        SetHandler "proxy:fcgi://php:9000"
    </LocationMatch>

    <Directory "/var/www/html">
        Options Indexes FollowSymLinks
        AllowOverride None
        Require all granted

        # secret.php는 개별 파일 보호
        <Files "secret.php">
            AuthType Basic
            AuthName "Restricted Area"
            AuthUserFile "/usr/local/apache2/.htpasswd"
            Require valid-user
        </Files>
    </Directory>

    # 업로드 디렉토리
    <Directory "/var/www/html/uploads">
        Options Indexes FollowSymLinks
        DirectoryIndex disabled
        AllowOverride None
        Require all granted

        # Mislead RewriteFlag Assignment 취약점 재현
        RewriteEngine On
        RewriteRule ^(.+\.php)$ $1 [H=application/x-httpd-php]
    </Directory>

    # <Directory "/var/www/html/uploads">
    #     Options Indexes FollowSymLinks
    #     AllowOverride None
    #     Require all granted

    #     RewriteEngine On
    #     RewriteRule ^(.+\.php)$ $1 [H=application/x-httpd-php]
    # </Directory>

    <Directory "/var/user">
        Options Indexes
        AllowOverride None
        Require all granted
    </Directory>

    # /html/* 경로로 들어오는 php는 실행하지 않고 원문 노출 -> 여기가 Source Disclosure 취약점 구현하는 부분
    <LocationMatch "^/html/.*">
        SetHandler None
        RemoveHandler .php
        AddType text/plain .php
    </LocationMatch>

</VirtualHost>