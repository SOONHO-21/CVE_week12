<VirtualHost *:80>
    # AddHandler application/x-httpd-php .php

    # <FilesMatch "\.php$"> → 실제 파일 이름이 .php일 때만 매칭
    # <LocationMatch "\.php$"> → 요청된 URL 경로가 .php로 끝날 때 매칭
    
    # 기본적으로 .php는 PHP-FPM으로 실행
    # <FilesMatch> : 파일 이름(특히 디스크상의 실제 파일 경로)에 정규 표현식을 이용해 표현식과 일치하는 파일에 대한 설정을 적용
    # <FilesMatch "\.php$">
    #     SetHandler "proxy:fcgi://php:9000"
    # </FilesMatch>

    # <LocationMatch> : 클라이언트 요청 URL 경로를 정규식으로 매칭해서 동작
    <LocationMatch "\.php$">
        SetHandler "proxy:fcgi://php:9000"
    </LocationMatch>

    ServerName localhost
    DocumentRoot "/var/www/html"

    AllowEncodedSlashes On
    RewriteEngine On

    # Filename Confusion - Path Truncation
    RewriteRule "^/user/(.*)$" "/var/user/$1/profile.yml" [L]

    # Local Gadgets Manipulation
    # Prefix rewrite 예시
    RewriteRule "^/view/(.*)$" "/var/www/html/$1" [L]

    # Mislead RewriteFlag Assignment
    # 다만, 이것을 추가하면 ACL ByPass 구현 불가. ACL을 구현하려면 이 부분 주석처리 혹은 제거
    # RewriteRule ^(.+\.php)$ $1 [H=proxy:fcgi://php:9000]
    # RewriteRule ^(.+\.php)$ $1 [H=application/x-httpd-php]

    # Source Disclosure
    # /html/config 접속하면 config.php 원문 노출되는 거임
    RewriteRule "^/html/(.*)$" "/$1.php" [L]

    <Directory "/var/www/html">
        Options Indexes FollowSymLinks
        AllowOverride None
        Require all granted

        # secret.php는 개별 파일 보호
        <Files "secret.php">
            AuthType Basic
            AuthName "Restricted Area"
            AuthUserFile "/usr/local/apache2/.htpasswd"
            Require valid-user
        </Files>
    </Directory>

    # 업로드 디렉토리
    <Directory "/var/www/html/uploads">
        Options Indexes FollowSymLinks
        DirectoryIndex disabled
        AllowOverride None
        Require all granted

        # Mislead RewriteFlag Assignment 취약점 재현(시도)
        RewriteEngine On
        RewriteRule ^(.+\.php)$ $1 [H=proxy:fcgi://php:9000]
    </Directory>

    <Directory "/var/user">
        Options Indexes
        AllowOverride None
        Require all granted
    </Directory>

    # Source Disclosure 취약점 구현
    # /html/* 경로로 들어오는 php는 실행하지 않고 원문 노출
    <LocationMatch "^/html/.*">
        SetHandler None
        RemoveHandler .php
        AddType text/plain .php
    </LocationMatch>

    <LocationMatch "^/usr/share/php/.*">
        SetHandler None
        RemoveHandler .php
        AddType text/plain .php
    </LocationMatch>

    Alias /usr/share "/usr/share"

    <Directory /usr/share>
        Options Indexes FollowSymLinks
        AllowOverride None
        Require all granted
    </Directory>

</VirtualHost>